{"ast":null,"code":"var _jsxFileName = \"/home/charliec/Documents/Weather_app/weather-app/src/components/days.js\";\nimport React from 'react';\nimport { StyledDivDays } from './styledComponents';\nconst img = 'https://www.metaweather.com/static/img/weather/png/';\nlet dates = [];\nconst d = new Date();\nconst weekday = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nconst month = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nlet nextDay = new Date(d);\n\nconst Days = props => {\n  const {\n    days\n  } = props;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StyledDivDays, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, days && days.map((day, i) => /*#__PURE__*/React.createElement(\"div\", {\n    id: day.id,\n    key: day.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, nextDay.setDate(day.getDate() + 1 + i), i === 0 ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, \"Tomorrow\") : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }\n  }, weekday[nextDay.getDay()], \", \", nextDay.getDate(), \" \", month[(d.getMonth() + i + 1) % 12]), /*#__PURE__*/React.createElement(\"img\", {\n    src: `${img}${day.weather_state_abbr}.png`,\n    alt: \"no load\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, Math.round(day.min_temp), \"\\xB0C\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, Math.round(day.max_temp), \"\\xB0C\")))));\n};\n\nexport default Days;","map":{"version":3,"sources":["/home/charliec/Documents/Weather_app/weather-app/src/components/days.js"],"names":["React","StyledDivDays","img","dates","d","Date","weekday","month","nextDay","Days","props","days","map","day","i","id","setDate","getDate","getDay","getMonth","weather_state_abbr","Math","round","min_temp","max_temp"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,QAA4B,oBAA5B;AAEA,MAAMC,GAAG,GAAE,qDAAX;AAEA,IAAIC,KAAK,GAAG,EAAZ;AACA,MAAMC,CAAC,GAAG,IAAIC,IAAJ,EAAV;AACA,MAAMC,OAAO,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAqB,KAArB,EAA2B,KAA3B,EAAiC,KAAjC,EAAuC,KAAvC,CAAhB;AACA,MAAMC,KAAK,GAAG,CAAE,KAAF,EAAQ,KAAR,EAAc,KAAd,EAAoB,KAApB,EAA0B,KAA1B,EAAgC,KAAhC,EAAsC,KAAtC,EAA4C,KAA5C,EAAkD,KAAlD,EAAwD,KAAxD,EAA8D,KAA9D,EAAoE,KAApE,CAAd;AACA,IAAIC,OAAO,GAAG,IAAIH,IAAJ,CAASD,CAAT,CAAd;;AAEA,MAAMK,IAAI,GAAIC,KAAD,IAAU;AACrB,QAAM;AAACC,IAAAA;AAAD,MAASD,KAAf;AACA,sBACE,uDACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEC,IAAI,IACFA,IAAI,CAACC,GAAL,CAAS,CAACC,GAAD,EAAKC,CAAL,kBACb;AAAK,IAAA,EAAE,EAAED,GAAG,CAACE,EAAb;AAAiB,IAAA,GAAG,EAAEF,GAAG,CAACE,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,OAAO,CAACQ,OAAR,CAAgBH,GAAG,CAACI,OAAJ,KAAgB,CAAhB,GAAoBH,CAApC,CADH,EAGIA,CAAC,KAAK,CAAN,gBAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAV,gBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,OAAO,CAACE,OAAO,CAACU,MAAR,EAAD,CAAZ,QAAkCV,OAAO,CAACS,OAAR,EAAlC,OAAsDV,KAAK,CAAC,CAACH,CAAC,CAACe,QAAF,KAAeL,CAAf,GAAmB,CAApB,IAAyB,EAA1B,CAA3D,CAJH,eAMI;AAAK,IAAA,GAAG,EAAG,GAAEZ,GAAI,GAAEW,GAAG,CAACO,kBAAmB,MAA1C;AAAiD,IAAA,GAAG,EAAC,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,IAAI,CAACC,KAAL,CAAWT,GAAG,CAACU,QAAf,CAAL,UAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,IAAI,CAACC,KAAL,CAAWT,GAAG,CAACW,QAAf,CAAL,UARJ,CADI,CAHJ,CADF,CADF;AAyBD,CA3BD;;AA6BA,eAAef,IAAf","sourcesContent":["import React from 'react';\nimport {StyledDivDays} from './styledComponents';\n\nconst img ='https://www.metaweather.com/static/img/weather/png/';\n\nlet dates = [];\nconst d = new Date();\nconst weekday = [\"Sun\", \"Mon\", \"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"];\nconst month = [ \"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\nlet nextDay = new Date(d);\n\nconst Days = (props) =>{\n  const {days} = props;\n  return (\n    <>\n      <StyledDivDays >\n      {\n        days && (\n          days.map((day,i)=>(\n      <div id={day.id} key={day.id} >\n        {nextDay.setDate(day.getDate() + 1 + i)}\n        {\n          i === 0 ? <h1>Tomorrow</h1> :\n         <h1>{weekday[nextDay.getDay()]}, {nextDay.getDate()} {month[(d.getMonth() + i + 1) % 12]}</h1>\n        }\n          <img src={`${img}${day.weather_state_abbr}.png`} alt=\"no load\"/>\n          <h4>{Math.round(day.min_temp)}°C</h4>\n          <h4>{Math.round(day.max_temp)}°C</h4>\n\n      </div>\n\n            )\n          )\n        )\n      }\n    </StyledDivDays >\n    </>\n  );\n};\n\nexport default Days;\n"]},"metadata":{},"sourceType":"module"}